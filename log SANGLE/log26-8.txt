CREATE\040DATABASE\040bankingtest;
use\040bankingtest
create\040table\040customers\040(
customer_id\040int\040primary\040key,
name\040varchar\040(20),
age\040int\040(20)
,\040phone\040varchar(10));
create\040table\040customers\040(\040customer_id\040int\040primary\040key,\040name\040varchar\040(20),\040age\040int\040(20)\040,\040phone\040varchar(10));
create\040table\040accounts\040(
account_id\040int\040primary\040key,
customer_id\040int,
balance\040decimal(15,2),
open_date\040date,
foreign\040key\040(customer_id)\040references\040customers(customer_id));
create\040table\040accounts\040(\040account_id\040int\040primary\040key,\040customer_id\040int,\040balance\040decimal(15,2),\040open_date\040date,\040foreign\040key\040(customer_id)\040references\040customers(customer_id));
create\040table\040transactions\040(
transaction_id\040int\040primary\040key,
account_id\040int,
amount\040decimal(15,2),
transaction_date\040date,
foreign\040ley\040(account_id)\040references\040accounts(account_id));
create\040table\040transactions\040(\040transaction_id\040int\040primary\040key,\040account_id\040int,\040amount\040decimal(15,2),\040transaction_date\040date,\040foreign\040ley\040(account_id)\040references\040accounts(account_id));
create\040table\040transactions(
transaction_id\040int\040primary\040key,
account_id\040int,
amount\040decimal(15,2),
transaction_date\040date,
foreign\040key\040(account_id)\040references\040accounts(account_id));
create\040table\040transactions(\040transaction_id\040int\040primary\040key,\040account_id\040int,\040amount\040decimal(15,2),\040transaction_date\040date,\040foreign\040key\040(account_id)\040references\040accounts(account_id));
alter\040table\040transactions\040add\040type\040varchar(20);
INSERT\040INTO\040Customers\040VALUES
(1,\040N'Nguyễn\040Văn\040A',\040'1990-05-15',\040'0901234567'),
(2,\040N'Trần\040Thị\040B',\040'1985-03-20',\040'0902345678');
INSERT\040INTO\040Customers\040VALUES\040(1,\040N'Nguyễn\040Văn\040A',\040'1990-05-15',\040'0901234567'),\040(2,\040N'Trần\040Thị\040B',\040'1985-03-20',\040'0902345678');
INSERT\040INTO\040Accounts\040VALUES
(1001,\0401,\0405000000,\040'2022-01-10'),
(1002,\0401,\04020000000,\040'2023-03-15'),
(1003,\0402,\04015000000,\040'2022-07-05');
INSERT\040INTO\040Accounts\040VALUES\040(1001,\0401,\0405000000,\040'2022-01-10'),\040(1002,\0401,\04020000000,\040'2023-03-15'),\040(1003,\0402,\04015000000,\040'2022-07-05');
INSERT\040INTO\040Transactions\040VALUES
(5001,\0401001,\0402000000,\040'2023-05-01',\040N'deposit'),
(5002,\0401001,\0401000000,\040'2023-05-10',\040N'withdraw'),
(5003,\0401002,\0405000000,\040'2023-06-01',\040N'deposit'),
(5004,\0401003,\0403000000,\040'2023-06-15',\040N'deposit');
INSERT\040INTO\040Transactions\040VALUES\040(5001,\0401001,\0402000000,\040'2023-05-01',\040N'deposit'),\040(5002,\0401001,\0401000000,\040'2023-05-10',\040N'withdraw'),\040(5003,\0401002,\0405000000,\040'2023-06-01',\040N'deposit'),\040(5004,\0401003,\0403000000,\040'2023-06-15',\040N'deposit');
insert\040into\040customers\040values\040(1,\040'nguyen\040van\040a','2000-04-05','0235569874'),(2,\040N'Trần\040Thị\040B',\040'1985-03-20',\040'0902345678');
alter\040table\040customers\040add\040dob\040date;
alter\040table\040customers\040drop\040column\040age;
insert\040into\040customers\040values\040(1,\040'nguyen\040van\040a','2000-04-05','0235569874'),(2,\040N'Trần\040Thị\040B',\040'1985-03-20',\040'0902345678');
show\040table\040customers
;
shows\040table\040
;
show\040tables
;
insert\040into\040customers\040values\040(1,\040'nguyen\040van\040a','0235569874','2000-05-04'),(2,\040N'Trần\040Thị\040B',\040'0902345678','1987-09-29');
select\040*\040from\040customers
;
INSERT\040INTO\040Accounts\040VALUES
(1001,\0401,\0405000000,\040'2022-01-10'),
(1002,\0401,\04020000000,\040'2023-03-15'),
(1003,\0402,\04015000000,\040'2022-07-05');
INSERT\040INTO\040Accounts\040VALUES\040(1001,\0401,\0405000000,\040'2022-01-10'),\040(1002,\0401,\04020000000,\040'2023-03-15'),\040(1003,\0402,\04015000000,\040'2022-07-05');
INSERT\040INTO\040accounts\040VALUES
(1001,\0401,\0405000000,\040'2022-01-10'),
(1002,\0401,\04020000000,\040'2023-03-15'),
(1003,\0402,\04015000000,\040'2022-07-05');
INSERT\040INTO\040accounts\040VALUES\040(1001,\0401,\0405000000,\040'2022-01-10'),\040(1002,\0401,\04020000000,\040'2023-03-15'),\040(1003,\0402,\04015000000,\040'2022-07-05');
INSERT\040INTO\040transactions\040VALUES
(5001,\0401001,\0402000000,\040'2023-05-01',\040N'deposit'),
(5002,\0401001,\0401000000,\040'2023-05-10',\040N'withdraw'),
(5003,\0401002,\0405000000,\040'2023-06-01',\040N'deposit'),
(5004,\0401003,\0403000000,\040'2023-06-15',\040N'deposit');
INSERT\040INTO\040transactions\040VALUES\040(5001,\0401001,\0402000000,\040'2023-05-01',\040N'deposit'),\040(5002,\0401001,\0401000000,\040'2023-05-10',\040N'withdraw'),\040(5003,\0401002,\0405000000,\040'2023-06-01',\040N'deposit'),\040(5004,\0401003,\0403000000,\040'2023-06-15',\040N'deposit');
select\040a.account_id,\040c.name,\040a.balance\040from\040account\040a\040join\040customers\040c\040on\040a.customer_id\040=\040c.customer_id;
select\040a.account_id,\040c.name,\040a.balance\040from\040accounts\040a\040join\040customers\040c\040on\040a.customer_id\040=\040c.customer_id;
SHOW\040PROCESSLIST;
exit\040






Lỗi kết nối tới connect do không cấp quyền lock tables

"name":"bankingtest","connector":{"state":"RUNNING","worker_id":"localhost:8083"},"tasks":[{"id":0,"state":"FAILED","worker_id":"localhost:8083","trace":"org.apache.kafka.connect.errors.ConnectException: An exception occurred in the change event producer. This connector will be stopped.\n\tat io.debezium.pipeline.ErrorHandler.setProducerThrowable(ErrorHandler.java:67)\n\tat io.debezium.pipeline.ChangeEventSourceCoordinator.lambda$start$0(ChangeEventSourceCoordinator.java:150)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: io.debezium.DebeziumException: io.debezium.DebeziumException: User does not have the 'LOCK TABLES' privilege required to obtain a consistent snapshot by preventing concurrent writes to tables.\n\tat io.debezium.pipeline.source.AbstractSnapshotChangeEventSource.execute(AbstractSnapshotChangeEventSource.java:105)\n\tat io.debezium.pipeline.ChangeEventSourceCoordinator.doSnapshot(ChangeEventSourceCoordinator.java:294)\n\tat io.debezium.pipeline.ChangeEventSourceCoordinator.doSnapshot(ChangeEventSourceCoordinator.java:278)\n\tat io.debezium.pipeline.ChangeEventSourceCoordinator.executeChangeEventSources(ChangeEventSourceCoordinator.java:192)\n\tat io.debezium.pipeline.ChangeEventSourceCoordinator.lambda$start$0(ChangeEventSourceCoordinator.java:143)\n\t... 5 more\nCaused by: io.debezium.DebeziumException: User does not have the 'LOCK TABLES' privilege required to obtain a consistent snapshot by preventing concurrent writes to tables.\n\tat io.debezium.connector.binlog.BinlogSnapshotChangeEventSource.tableLock(BinlogSnapshotChangeEventSource.java:522)\n\tat io.debezium.connector.binlog.BinlogSnapshotChangeEventSource.readTableStructure(BinlogSnapshotChangeEventSource.java:301)\n\tat io.debezium.connector.binlog.BinlogSnapshotChangeEventSource.readTableStructure(BinlogSnapshotChangeEventSource.java:67)\n\tat io.debezium.relational.RelationalSnapshotChangeEventSource.doExecute(RelationalSnapshotChangeEventSource.java:163)\n\tat io.debezium.pipeline.source.AbstractSnapshotChangeEventSource.execute(AbstractSnapshotChangeEventSource.java:96)\n\t... 9 more\n"}],"type":"source"} -> grant thieu LOCK TABLES-> có thể update trong connectors/setting snapshot locking mode: extend nghĩa là người khác vẫn có thể SELECT (xem) nhưng không thể INSERT/UPDATE/DELETE (chỉnh sửa) dữ liệu trên bảng trong lúc snapshot. -> connect chạy lại bình thường
